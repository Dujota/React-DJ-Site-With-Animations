{"version":3,"sources":["utils/animate.js","components/ContentContainer.jsx","components/About.jsx","components/Contact.jsx","components/Media.jsx","components/Home.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["animateCss","element","animationName","callback","node","document","querySelector","classList","add","addEventListener","handleAnimationEnd","remove","removeEventListener","ContentContainer","state","loading","componentDidMount","pulseHover","setState","this","props","header","children","handleCloseButton","className","onClick","onMouseEnter","Component","About","closeAnimation","setTimeout","window","location","replace","id","Contact","console","log","enterAnimation","componentWillUnmount","type","name","placeholder","rows","Media","Home","showNavBar","fadeIn","_isMounted","toggleComponentDisplay","e","currentTarget","innerText","toLowerCase","fadeOut","onLinkClicked","toggleNavBarDisplay","about","contact","media","App","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.562efdcf.chunk.js","sourcesContent":["export function animateCss(element, animationName, callback) {\n  const node = document.querySelector(element);\n  node.classList.add('animated', animationName);\n\n  function handleAnimationEnd() {\n    node.classList.remove('animated', animationName);\n    node.removeEventListener('animationend', handleAnimationEnd);\n\n    if (typeof callback === 'function') callback();\n  }\n\n  node.addEventListener('animationend', handleAnimationEnd);\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { animateCss } from '../utils/animate';\nimport '../styles/ContentContainer.scss';\n\nclass ContentContainer extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount = () => {\n    animateCss('.content-container', 'fadeIn', () => {\n      this.pulseHover();\n      this.setState({ loading: false });\n    });\n  };\n\n  pulseHover = () => animateCss('.close-icon', 'pulse');\n\n  render() {\n    const { header, children, handleCloseButton } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className='overlay'>\n        <div className='ui container content-container'>\n          {/* CLOSE BUTTON */}\n\n          <section className='close-button-container'>\n            <i\n              className='close icon close-icon'\n              onClick={!loading ? handleCloseButton : null}\n              onMouseEnter={!loading ? this.pulseHover : null}\n            />\n            <span className='close-text'>Close</span>\n          </section>\n\n          {/* HEADER */}\n          <section className='ui header title'>\n            <h1>{header}</h1>\n          </section>\n\n          {/* Content */}\n\n          {children && children}\n        </div>\n      </div>\n    );\n  }\n}\n\nContentContainer.propTypes = {\n  header: PropTypes.string.isRequired\n};\n\nexport default ContentContainer;\n","import React, { Component } from 'react';\nimport { animateCss } from '../utils/animate';\n\n// Syles\nimport '../styles/About.scss';\n\n// Components\nimport ContentContainer from './ContentContainer';\n\nclass About extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount = () => {\n    if (this.state.loading) {\n      animateCss('.close-icon', 'rotateIn');\n      animateCss('.card-1', 'fadeInLeft');\n      animateCss('.card-3', 'fadeInRight', this.setState({ loading: false }));\n    }\n  };\n\n  closeAnimation = () => {\n    animateCss('.close-icon', 'rotateOut');\n    animateCss('.card-1', 'fadeOutLeft');\n    animateCss('.card-3', 'fadeOutRight');\n    animateCss('.content-container', 'fadeOut');\n  };\n\n  handleCloseButton = () => {\n    this.setState({ loading: true });\n    this.closeAnimation();\n    setTimeout(() => {\n      // this.props.toggleNavBarDisplay('about');\n      window.location.replace('/');\n    }, 1500);\n  };\n\n  render() {\n    return (\n      <div id='about'>\n        <ContentContainer\n          header={'DJ NAME'}\n          handleCloseButton={this.handleCloseButton}>\n          <h3 className='ui header intro'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Sunt harum\n            reprehenderit recusandae nemo laudantium sit libero repellat modi,\n            laboriosam quibusdam dolorum, culpa magnam. Minus, nostrum.\n          </h3>\n\n          <div className='ui cards-segment'>\n            {/* CARD 1 */}\n            <section className='ui about-card card-1'>\n              <div className='wrapper'>\n                <h2 className='ui icon header '>\n                  <i className='headphones icon' />\n                  <div className='content icon-header'>\n                    Catchy Phrase\n                    <div className='sub header'>\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                      Quidem dicta distinctio deleniti suscipit labore\n                      accusantium nisi dolor mollitia magnam animi.\n                    </div>\n                  </div>\n                </h2>\n              </div>\n            </section>\n\n            {/* Divider */}\n            <section className='divider' />\n\n            {/* CARD 2 */}\n            <section className='ui about-card card-2'>\n              <div className='wrapper'>\n                <h2 className='ui icon header'>\n                  <i className='volume up icon' />\n                  <div className='content icon-header'>\n                    Second Phrase\n                    <div className='sub header'>\n                      Lorem ipsum dolor sit amet consectetur adipisicing elit.\n                      Sapiente totam, odio rem odit consequuntur voluptas sunt\n                      dolorum corporis. Minima, laudantium?\n                    </div>\n                  </div>\n                </h2>\n              </div>\n            </section>\n\n            {/* Divider */}\n            <section className='divider' />\n\n            {/* CARD 3 */}\n            <section className='ui about-card card-3'>\n              <div className='wrapper'>\n                <h2 className='ui icon header'>\n                  <i className='video icon' />\n                  <div className='content icon-header'>\n                    Video Thing\n                    <div className='sub header'>\n                      Lorem ipsum dolor sit amet consectetur, adipisicing elit.\n                      Atque magni ex fugit reprehenderit deserunt quasi eum hic\n                      molestias explicabo est.\n                    </div>\n                  </div>\n                </h2>\n              </div>\n            </section>\n          </div>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { animateCss } from '../utils/animate';\n\n// Styles\nimport '../styles/Contact.scss';\n\n// Components\nimport ContentContainer from './ContentContainer';\n\nclass Contact extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount = () => {\n    console.log('Contact mounted');\n\n    if (this.state.loading) {\n      this.enterAnimation();\n      this.setState({ loading: false });\n    }\n  };\n\n  componentWillUnmount = () => {\n    console.log('Contact Unmounted');\n  };\n\n  enterAnimation = () => {\n    animateCss('.contact-details', 'fadeInLeft');\n    animateCss('.form-content', 'fadeInRight');\n    animateCss('.close-icon', 'rotateIn');\n  };\n\n  closeAnimation = () => {\n    animateCss('.close-icon', 'rotateOut');\n    animateCss('.contact-details', 'fadeOutLeft');\n    animateCss('.form-content', 'fadeOutRight');\n    animateCss('.content-container', 'fadeOut');\n  };\n\n  handleCloseButton = () => {\n    this.setState({ loading: true });\n    this.closeAnimation();\n    setTimeout(() => {\n      // this.props.toggleNavBarDisplay('contact');\n      window.location.replace('/');\n    }, 1500);\n  };\n\n  render() {\n    return (\n      <div id='contact'>\n        <ContentContainer\n          header={'Contact'}\n          handleCloseButton={this.handleCloseButton}>\n          <div className='contact-content'>\n            {/* DETAILS SECTION */}\n            <section className='contact-details '>\n              <h5 className='contact-me-text'>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Id,\n                animi deleniti. Dolor laborum impedit tempora minus adipisci\n                quia tenetur officiis dolores at, possimus atque earum doloribus\n                dolore tempore dicta qui.\n              </h5>\n\n              <div className='email-icon'>\n                <i className='envelope outline icon' />\n                <span className='text-content'>DJName@example.com</span>\n              </div>\n\n              <div className='website-icon'>\n                <i className='globe icon' />\n                <span className='text-content'>www.DJName.com</span>\n              </div>\n\n              <div className='facebook-icon'>\n                <i className='facebook f icon' />\n                <span className='text-content'>DJName Profile Link</span>\n              </div>\n\n              <div className='instagram-icon'>\n                <i className='instagram icon' />\n                <span className='text-content'>@DJName</span>\n              </div>\n            </section>\n            {/* CONTACT FORM  */}\n            <section className='form-content '>\n              <form className='ui form'>\n                <div className='field'>\n                  <input type='text' name='name' placeholder='Name' rows='5' />\n                </div>\n                <div className='field'>\n                  <input type='text' name='email' placeholder='Email Address' />\n                </div>\n\n                <div className='field'>\n                  <textarea placeholder='Shoot me a Line!' />\n                </div>\n\n                <button className='ui button submit-button' type='submit'>\n                  Send\n                </button>\n              </form>\n            </section>\n          </div>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\n// Components\nimport ContentContainer from './ContentContainer';\n\n// Styles & Animations\nimport '../styles/Media.scss';\nimport { animateCss } from '../utils/animate';\n\nclass Media extends Component {\n  state = {\n    loading: true\n  };\n\n  componentDidMount = () => {\n    this.setState({ loading: false });\n    this.enterAnimation();\n    console.log('Media mounted');\n  };\n\n  componentWillUnmount = () => {\n    console.log('Media unmounted');\n  };\n\n  handleCloseButton = () => {\n    console.log('clicked');\n    this.setState({ loading: true });\n    this.closeAnimation();\n    setTimeout(() => {\n      // this.props.toggleNavBarDisplay('media');\n      window.location.replace('/');\n    }, 1500);\n  };\n\n  closeAnimation = () => {\n    animateCss('.close-icon', 'rotateOut');\n  };\n\n  enterAnimation = () => {\n    animateCss('.close-icon', 'rotateIn');\n  };\n\n  render() {\n    return (\n      <div id='media'>\n        <ContentContainer\n          header={'Media'}\n          handleCloseButton={\n            !this.state.loading ? this.handleCloseButton : null\n          }>\n          <h3 className='ui header intro'>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Quod omnis\n            soluta mollitia ex, enim quam ipsa incidunt vero reprehenderit, aut,\n            dolor voluptates. Eaque, libero tenetur rerum nostrum consequuntur\n            sit cupiditate.\n          </h3>\n        </ContentContainer>\n      </div>\n    );\n  }\n}\n\nexport default Media;\n","import React, { Component } from 'react';\nimport '../styles/Home.scss';\nimport { animateCss } from '../utils/animate';\n\n// Components\nimport About from './About';\nimport Contact from './Contact';\nimport Media from './Media';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNavBar: true,\n      loading: true,\n      about: false,\n      contact: false,\n      media: false\n    };\n\n    this._isMounted = false;\n  }\n\n  componentDidMount = () => {\n    this.state.showNavBar && this.fadeIn();\n    this._isMounted = true;\n    this.setState({ loading: false });\n  };\n\n  componentWillUnmount = () => {\n    console.log('unmounting');\n  };\n\n  toggleComponentDisplay = e => {\n    const name = e.currentTarget.innerText.toLowerCase();\n    this.fadeOut();\n    setTimeout(() => {\n      this.setState({\n        [name]: !this.state[name],\n        showNavBar: !this.state.showNavBar\n      });\n    }, 1500);\n  };\n\n  onLinkClicked = e => {\n    this._isMounted = false;\n    this.setState({ loading: true });\n    return this.toggleComponentDisplay(e);\n  };\n\n  fadeOut = () => {\n    animateCss('.about', 'fadeOutLeft');\n    animateCss('.media', 'fadeOutRight');\n    animateCss('.contact', 'fadeOut');\n    // home does not unMount, need a way to control when to allow onLinkClicked\n    // to be active after 1 second\n    // so when we navigate back to Home, the links work.\n    setTimeout(() => {\n      return (this._isMounted = true);\n    }, 1500);\n  };\n\n  fadeIn = () => {\n    animateCss('.about', 'fadeInLeft');\n    animateCss('.media', 'fadeInRight');\n    animateCss('.contact', 'fadeIn');\n  };\n\n  toggleNavBarDisplay = name => {\n    const { showNavBar } = this.state;\n    this.setState({ showNavBar: !showNavBar, [name]: !this.state[name] });\n  };\n\n  render() {\n    const { contact, about, media, showNavBar, loading } = this.state;\n\n    return (\n      <div id='home'>\n        <div className='home-overlay'>\n          {/* NAV BAR STARTS HERE */}\n          {showNavBar && (\n            <nav id='navbar'>\n              <span className='about'>\n                <span\n                  className='ui inverted blue basic button '\n                  onClick={\n                    this._isMounted && !loading ? this.onLinkClicked : null\n                  }>\n                  About\n                </span>\n              </span>\n\n              <span className='contact'>\n                <span\n                  className='ui inverted violet basic button '\n                  onClick={\n                    this._isMounted && !loading ? this.onLinkClicked : null\n                  }>\n                  Contact\n                </span>\n              </span>\n              <span className='media'>\n                <span\n                  className='ui inverted purple basic button'\n                  onClick={\n                    this._isMounted && !loading ? this.onLinkClicked : null\n                  }>\n                  Media\n                </span>\n              </span>\n            </nav>\n          )}\n          {contact && (\n            <Contact toggleNavBarDisplay={this.toggleNavBarDisplay} />\n          )}\n          {about && <About toggleNavBarDisplay={this.toggleNavBarDisplay} />}\n          {media && <Media toggleNavBarDisplay={this.toggleNavBarDisplay} />}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Home from './Home';\n\nclass App extends Component {\n  render() {\n    return <Home />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}